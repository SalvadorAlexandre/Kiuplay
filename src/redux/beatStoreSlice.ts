// src/redux/beatStoreSlice.ts
import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { ExclusiveBeat } from '../types/contentType';

// âœ… Interface do estado global da BeatStore (REVISADA)
interface BeatStoreState {
    feeds: ExclusiveBeat[];
    exclusiveBeats: ExclusiveBeat[];
    favorites: ExclusiveBeat[];
    // ðŸ›‘ REMOVIDO: purchasedBeats (Movido para o purchasesSlice.ts)
}

// âœ… Estado inicial (REVISADO)
const initialState: BeatStoreState = {
    feeds: [],
    exclusiveBeats: [],
    favorites: [],
    // ðŸ›‘ REMOVIDO: purchasedBeats: [],
};

// âœ… Slice principal
const beatStoreSlice = createSlice({
    name: 'beatStore',
    initialState,
    reducers: {
        setFeeds(state, action: PayloadAction<ExclusiveBeat[]>) {
            state.feeds = action.payload;
        },
        setExclusiveBeats(state, action: PayloadAction<ExclusiveBeat[]>) {
            state.exclusiveBeats = action.payload;
        },
        setFavorites(state, action: PayloadAction<ExclusiveBeat[]>) {
            state.favorites = action.payload;
        },

        // ðŸ†• AÃ‡ÃƒO PRINCIPAL: Remove o beat das listas 'Ã€ VENDA'
        // SerÃ¡ usada apÃ³s o sucesso da compra para limpar o feed e favoritos.
        markBeatAsSold(state, action: PayloadAction<string>) {
            const beatId = action.payload;

            // âœ… Removendo o beat de todas as categorias de venda
            state.feeds = state.feeds.filter(beat => beat.id !== beatId);
            state.exclusiveBeats = state.exclusiveBeats.filter(beat => beat.id !== beatId);
            state.favorites = state.favorites.filter(beat => beat.id !== beatId);

            // ðŸ›‘ NOTA: Linha 'state.purchasedBeats = ...' FOI REMOVIDA.
        },

        // ðŸ›‘ REMOVIDO: removeBeatFromAll (substituÃ­do por markBeatAsSold e focado na remoÃ§Ã£o de venda)
        // ðŸ›‘ REMOVIDO: addPurchasedBeat (Movido para o purchasesSlice.ts)
    },
});

// âœ… ExportaÃ§Ãµes das actions e do reducer (REVISADO)
export const {
    setFeeds,
    setExclusiveBeats,
    setFavorites,
    markBeatAsSold, // ðŸ†• markBeatAsSold Ã© a nova action chave
} = beatStoreSlice.actions;

export default beatStoreSlice.reducer;